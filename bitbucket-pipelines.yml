options:
  docker: true

pipelines:
  default:
    - step:
        caches:
          - node
        name: Node.js build & test
        image: node:11.13.0
        script:
          - node -v
          - npm install
          - npm test
    - step:
        name: Docker image build
        image: atlassian/pipelines-awscli:1.16.98
        script:
          - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
          - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
          - docker build -t ${AWS_REGISTRY_URL}:$BUILD_ID .
          - docker push ${AWS_REGISTRY_URL}:$BUILD_ID
          - docker tag ${AWS_REGISTRY_URL}:$BUILD_ID ${AWS_REGISTRY_URL}:development
          - docker push ${AWS_REGISTRY_URL}:development
          - pipe: atlassian/slack-notify:0.2.3
            variables:
              WEBHOOK_URL: 'https://hooks.slack.com/services/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'
              MESSAGE: 'New version of Nodejs-example image pushed'
    - step:
        name: Deploy to k8s dev
        image: atlassian/pipelines-kubectl
        deployment: test
        script:
          - echo $K8S_TOKEN > ./token
          - echo $K8S_CA > ./ca.pem
          - kubectl config set-cluster K8S-DEV-CLUSTER --server=$K8S_ENDPOINT --certificate-authority="$(pwd)/ca.pem"
          - kubectl config set-credentials $K8S_SA --token="$(cat ./token)"
          - kubectl config set-context K8S-DEV-CONTEXT --cluster=K8S-DEV-CLUSTER --user=$K8S_SA
          - kubectl config use-context K8S-DEV-CONTEXT
          - kubectl set image deployment/nodejs-example nodejs-example=665901990640.dkr.ecr.eu-west-1.amazonaws.com/k8s-node-helloworld:$BITBUCKET_COMMIT -n dev
          - pipe: atlassian/slack-notify:0.2.3
            variables:
              WEBHOOK_URL: 'https://hooks.slack.com/services/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'
              MESSAGE: 'New version of Nodejs-example deployed on k8s development'
    - step:
        name: Deploy to k8s staging
        image: atlassian/pipelines-kubectl
        deployment: staging
        trigger: manual
        script:
          - kubectl version --client
    - step:
        name: Deploy to k8s production
        image: atlassian/pipelines-kubectl
        deployment: production
        trigger: manual
        script:
          - kubectl version --client
